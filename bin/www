#!/usr/bin/env node

/**
 * Module dependencies.
 */

var app = require('../app')
var http = require('http')

/**
 * Get port from environment and store in Express.
 */

const {PORT} = require('../lib/constants')
app.set('port', PORT)

/**
 * Create HTTP server.
 */

var server = http.createServer(app)

/**
 * Listen on provided port, on all network interfaces.
 */

server.listen(PORT)
server.on('error', onError)
server.on('listening', onListening)

/**
 * Event listener for HTTP server "error" event.
 */

function onError (error) {
  if (error.syscall !== 'listen') {
    throw error
  }

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(PORT + ' requires elevated privileges')
      process.exit(1)
    case 'EADDRINUSE':
      console.error(PORT + ' is already in use')
      process.exit(1)
    default:
      throw error
  }
}

/**
 * Event listener for HTTP server "listening" event.
 */

function onListening () {
  var addr = server.address()
  var bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
  console.log('Listening on ' + bind);
}
